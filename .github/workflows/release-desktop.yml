name: Release Desktop Apps

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: frontend/requirements.txt
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install frontend requirements
        run: pip install --upgrade -r frontend/requirements.txt
      - name: Package (Windows via .spec)
        if: runner.os == 'Windows'
        run: pyinstaller FaxAutomationClient.spec
      - name: Package (macOS/Linux via script)
        if: runner.os != 'Windows'
        shell: bash
        run: bash frontend/package.sh

      - name: Archive Linux build as tar.gz (preserve exec perms)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          cd dist
          FILES=(FaxAutomationClient)
          [ -f chromedriver ] && FILES+=(chromedriver)
          [ -f .env ] && FILES+=(.env)
          tar -czf FaxAutomationClient-linux-x64.tar.gz "${FILES[@]}"
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: FaxAutomationClient-${{ runner.os }}
          path: |
            dist/**
            dist/FaxAutomationClient-linux-x64.tar.gz
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
      - name: List artifacts
        run: ls -R artifacts
      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
